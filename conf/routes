# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
#LOGIN
POST          /api/login                                controllers.AuthController.login

#VIEWS
GET           /api/view2                                controllers.ViewsController.loadView2

#MOVEMENTS
POST          /api/movements/derived                    controllers.MovementsController.deriveDocument
POST          /api/movements/derivedAssigned            controllers.MovementsController.deriveAssignedDocument
GET           /api/movements/office/:officeId           controllers.MovementsController.loadMovementsByOffice(officeId)
GET           /api/movements/user/office/:officeId      controllers.MovementsController.loadUserMovementsByOffice(officeId)
GET           /api/movements/admin/office/:officeId     controllers.MovementsController.loadAdminMovementsByOffice(officeId)
GET           /api/movements/numTram/:numTram           controllers.MovementsController.loadMovementsByTramNum(numTram)
GET           /api/movements/currentDate                controllers.MovementsController.loadMovementsByCurrentDate
PUT           /api/movements                            controllers.MovementsController.updateDocumentConfirm
DELETE        /api/movements                            controllers.MovementsController.deleteMovements
POST          /api/movements/:userId                    controllers.ViewsController.insertFromView2(userId)
GET           /api/movements/:userId                    controllers.MovementsController.loadMovementsByAssignedTo(userId)
POST          /api/movements/user/:userId/office/:officeId      controllers.UsersController.generateResponseToMovements(userId,officeId)
POST          /api/movements/admin/:userId/office/:officeId      controllers.UsersController.generateResponseToMovementsAdmin(userId,officeId)
GET           /api/movements/admin/analyze              controllers.MovementsController.loadMovementsToAnalyze
POST          /api/movements/advanced/search             controllers.MovementsController.advancedSearch

#TYPEDOCUMENTS
GET           /api/typeDocuments                        controllers.TypeDocumentController.getTypeDocuments

#USERS
GET           /api/userBossOffice                       controllers.UsersController.getOfficeBoss
GET           /api/admin/user/getAll                    controllers.UsersController.getAllUsers
PUT           /api/admin/user                           controllers.UsersController.updateUser
DELETE        /api/admin/user/:userId                   controllers.UsersController.deleteUser(userId)
GET           /api/admin/user/:userId                   controllers.UsersController.getUserById(userId)
POST          /api/admin/user                           controllers.UsersController.createUser

#OFFICES
GET           /api/admin/office/getAll                  controllers.OfficesController.getAllOffices
GET           /api/admin/office/:officeId               controllers.OfficesController.getOfficeById(officeId)
PUT           /api/admin/office                         controllers.OfficesController.updateOffice
DELETE        /api/admin/office/:officeId               controllers.OfficesController.deleteOffice(officeId)
POST          /api/admin/office                         controllers.OfficesController.createOffice

#DOCUMENT INTERN
POST          /api/internDocument/office/:officeId/user/:userId   controllers.InternDocumentsController.createDocumentCircular(officeId,userId)
POST          /api/correlativeMax                       controllers.UsersController.getCorrelativeMax
GET           /api/internDocument/user/:userId          controllers.InternDocumentsController.getDocumentsByUserId(userId)
GET           /api/internDocument/:typeDocumentId       controllers.InternDocumentsController.getDocumentsByTypeDocument(typeDocumentId)
GET           /api/internDocument/admin/:officeId       controllers.InternDocumentsController.getDocumentsAdmin(officeId)
GET           /api/internDocument/office/:officeId/documentId/:documentId      controllers.InternDocumentsController.getDocumentsByOfficeId(documentId,officeId)
GET           /api/internDocument/circulars/:userId     controllers.InternDocumentsController.getCircularDocumentsByUserId(userId)
GET           /api/circularDetails/:documentId          controllers.InternDocumentsController.getCircularDetails(documentId)
PUT           /api/internDocument/:documentId           controllers.InternDocumentsController.editInternDocument(documentId)
DELETE        /api/internDocument                       controllers.InternDocumentsController.deleteDocuments
POST          /api/internDocument                       controllers.InternDocumentsController.createInternDocument
#INITIAL
GET           /api/initialState                         controllers.HomeController.initialState

GET           /                                         controllers.HomeController.index(path = "home")
GET           /*path                                    controllers.HomeController.index(path)

GET           /assets/*file                             controllers.Assets.versioned(path="/public", file: Asset)

